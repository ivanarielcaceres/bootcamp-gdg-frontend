// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ItemListing /> List must show 3 Items 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ItemListing
    items={
        Array [
            Object {
              "key": 0,
              "name": "Item 1",
            },
            Object {
              "key": 1,
              "name": "Item 2",
            },
            Object {
              "key": 2,
              "name": "Item 3",
            },
          ]
    }
    removeItem={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ListGroupItem
          tag="li"
>
          Item 1
          <Button
                    color="danger"
                    onClick={[Function]}
                    tag="button"
          />
</ListGroupItem>,
        <ListGroupItem
          tag="li"
>
          Item 2
          <Button
                    color="danger"
                    onClick={[Function]}
                    tag="button"
          />
</ListGroupItem>,
        <ListGroupItem
          tag="li"
>
          Item 3
          <Button
                    color="danger"
                    onClick={[Function]}
                    tag="button"
          />
</ListGroupItem>,
      ],
      "tag": "ul",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "Item 1",
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
/>,
          ],
          "tag": "li",
        },
        "ref": null,
        "rendered": Array [
          "Item 1",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "danger",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "Item 2",
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
/>,
          ],
          "tag": "li",
        },
        "ref": null,
        "rendered": Array [
          "Item 2",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "danger",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "Item 3",
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
/>,
          ],
          "tag": "li",
        },
        "ref": null,
        "rendered": Array [
          "Item 3",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "danger",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ListGroupItem
            tag="li"
>
            Item 1
            <Button
                        color="danger"
                        onClick={[Function]}
                        tag="button"
            />
</ListGroupItem>,
          <ListGroupItem
            tag="li"
>
            Item 2
            <Button
                        color="danger"
                        onClick={[Function]}
                        tag="button"
            />
</ListGroupItem>,
          <ListGroupItem
            tag="li"
>
            Item 3
            <Button
                        color="danger"
                        onClick={[Function]}
                        tag="button"
            />
</ListGroupItem>,
        ],
        "tag": "ul",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Item 1",
              <Button
                color="danger"
                onClick={[Function]}
                tag="button"
/>,
            ],
            "tag": "li",
          },
          "ref": null,
          "rendered": Array [
            "Item 1",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "danger",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Item 2",
              <Button
                color="danger"
                onClick={[Function]}
                tag="button"
/>,
            ],
            "tag": "li",
          },
          "ref": null,
          "rendered": Array [
            "Item 2",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "danger",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Item 3",
              <Button
                color="danger"
                onClick={[Function]}
                tag="button"
/>,
            ],
            "tag": "li",
          },
          "ref": null,
          "rendered": Array [
            "Item 3",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "danger",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<ItemListing /> Render without crasing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ItemListing
    items={
        Array [
            Object {
              "key": 0,
              "name": "Item 1",
            },
            Object {
              "key": 1,
              "name": "Item 2",
            },
            Object {
              "key": 2,
              "name": "Item 3",
            },
          ]
    }
    removeItem={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ListGroupItem
          tag="li"
>
          Item 1
          <Button
                    color="danger"
                    onClick={[Function]}
                    tag="button"
          />
</ListGroupItem>,
        <ListGroupItem
          tag="li"
>
          Item 2
          <Button
                    color="danger"
                    onClick={[Function]}
                    tag="button"
          />
</ListGroupItem>,
        <ListGroupItem
          tag="li"
>
          Item 3
          <Button
                    color="danger"
                    onClick={[Function]}
                    tag="button"
          />
</ListGroupItem>,
      ],
      "tag": "ul",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "Item 1",
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
/>,
          ],
          "tag": "li",
        },
        "ref": null,
        "rendered": Array [
          "Item 1",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "danger",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "Item 2",
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
/>,
          ],
          "tag": "li",
        },
        "ref": null,
        "rendered": Array [
          "Item 2",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "danger",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "Item 3",
            <Button
              color="danger"
              onClick={[Function]}
              tag="button"
/>,
          ],
          "tag": "li",
        },
        "ref": null,
        "rendered": Array [
          "Item 3",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "color": "danger",
              "onClick": [Function],
              "tag": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ListGroupItem
            tag="li"
>
            Item 1
            <Button
                        color="danger"
                        onClick={[Function]}
                        tag="button"
            />
</ListGroupItem>,
          <ListGroupItem
            tag="li"
>
            Item 2
            <Button
                        color="danger"
                        onClick={[Function]}
                        tag="button"
            />
</ListGroupItem>,
          <ListGroupItem
            tag="li"
>
            Item 3
            <Button
                        color="danger"
                        onClick={[Function]}
                        tag="button"
            />
</ListGroupItem>,
        ],
        "tag": "ul",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Item 1",
              <Button
                color="danger"
                onClick={[Function]}
                tag="button"
/>,
            ],
            "tag": "li",
          },
          "ref": null,
          "rendered": Array [
            "Item 1",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "danger",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Item 2",
              <Button
                color="danger"
                onClick={[Function]}
                tag="button"
/>,
            ],
            "tag": "li",
          },
          "ref": null,
          "rendered": Array [
            "Item 2",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "danger",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Item 3",
              <Button
                color="danger"
                onClick={[Function]}
                tag="button"
/>,
            ],
            "tag": "li",
          },
          "ref": null,
          "rendered": Array [
            "Item 3",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "danger",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
